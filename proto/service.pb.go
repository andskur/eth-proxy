// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// BlockGetter is getter to fetch block
// by number or latest block
type BlockGetter struct {
	// Types that are valid to be assigned to Getter:
	//	*BlockGetter_Number
	//	*BlockGetter_Latest
	Getter               isBlockGetter_Getter `protobuf_oneof:"getter"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BlockGetter) Reset()         { *m = BlockGetter{} }
func (m *BlockGetter) String() string { return proto.CompactTextString(m) }
func (*BlockGetter) ProtoMessage()    {}
func (*BlockGetter) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5ab745470eb2fdc6, []int{0}
}
func (m *BlockGetter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockGetter.Unmarshal(m, b)
}
func (m *BlockGetter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockGetter.Marshal(b, m, deterministic)
}
func (dst *BlockGetter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockGetter.Merge(dst, src)
}
func (m *BlockGetter) XXX_Size() int {
	return xxx_messageInfo_BlockGetter.Size(m)
}
func (m *BlockGetter) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockGetter.DiscardUnknown(m)
}

var xxx_messageInfo_BlockGetter proto.InternalMessageInfo

type isBlockGetter_Getter interface {
	isBlockGetter_Getter()
}

type BlockGetter_Number struct {
	Number int64 `protobuf:"varint,1,opt,name=number,proto3,oneof"`
}

type BlockGetter_Latest struct {
	Latest bool `protobuf:"varint,2,opt,name=latest,proto3,oneof"`
}

func (*BlockGetter_Number) isBlockGetter_Getter() {}

func (*BlockGetter_Latest) isBlockGetter_Getter() {}

func (m *BlockGetter) GetGetter() isBlockGetter_Getter {
	if m != nil {
		return m.Getter
	}
	return nil
}

func (m *BlockGetter) GetNumber() int64 {
	if x, ok := m.GetGetter().(*BlockGetter_Number); ok {
		return x.Number
	}
	return 0
}

func (m *BlockGetter) GetLatest() bool {
	if x, ok := m.GetGetter().(*BlockGetter_Latest); ok {
		return x.Latest
	}
	return false
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BlockGetter) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BlockGetter_OneofMarshaler, _BlockGetter_OneofUnmarshaler, _BlockGetter_OneofSizer, []interface{}{
		(*BlockGetter_Number)(nil),
		(*BlockGetter_Latest)(nil),
	}
}

func _BlockGetter_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BlockGetter)
	// getter
	switch x := m.Getter.(type) {
	case *BlockGetter_Number:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Number))
	case *BlockGetter_Latest:
		t := uint64(0)
		if x.Latest {
			t = 1
		}
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case nil:
	default:
		return fmt.Errorf("BlockGetter.Getter has unexpected type %T", x)
	}
	return nil
}

func _BlockGetter_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BlockGetter)
	switch tag {
	case 1: // getter.number
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Getter = &BlockGetter_Number{int64(x)}
		return true, err
	case 2: // getter.latest
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Getter = &BlockGetter_Latest{x != 0}
		return true, err
	default:
		return false, nil
	}
}

func _BlockGetter_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BlockGetter)
	// getter
	switch x := m.Getter.(type) {
	case *BlockGetter_Number:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Number))
	case *BlockGetter_Latest:
		n += 1 // tag and wire
		n += 1
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// TxGetter is getter to fetch Tx by
// hash and block getter
type TxGetter struct {
	// Types that are valid to be assigned to Getter:
	//	*TxGetter_Hash
	//	*TxGetter_Index
	Getter               isTxGetter_Getter `protobuf_oneof:"getter"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TxGetter) Reset()         { *m = TxGetter{} }
func (m *TxGetter) String() string { return proto.CompactTextString(m) }
func (*TxGetter) ProtoMessage()    {}
func (*TxGetter) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5ab745470eb2fdc6, []int{1}
}
func (m *TxGetter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxGetter.Unmarshal(m, b)
}
func (m *TxGetter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxGetter.Marshal(b, m, deterministic)
}
func (dst *TxGetter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxGetter.Merge(dst, src)
}
func (m *TxGetter) XXX_Size() int {
	return xxx_messageInfo_TxGetter.Size(m)
}
func (m *TxGetter) XXX_DiscardUnknown() {
	xxx_messageInfo_TxGetter.DiscardUnknown(m)
}

var xxx_messageInfo_TxGetter proto.InternalMessageInfo

type isTxGetter_Getter interface {
	isTxGetter_Getter()
}

type TxGetter_Hash struct {
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3,oneof"`
}

type TxGetter_Index struct {
	Index *TxGetterIndex `protobuf:"bytes,2,opt,name=index,proto3,oneof"`
}

func (*TxGetter_Hash) isTxGetter_Getter() {}

func (*TxGetter_Index) isTxGetter_Getter() {}

func (m *TxGetter) GetGetter() isTxGetter_Getter {
	if m != nil {
		return m.Getter
	}
	return nil
}

func (m *TxGetter) GetHash() []byte {
	if x, ok := m.GetGetter().(*TxGetter_Hash); ok {
		return x.Hash
	}
	return nil
}

func (m *TxGetter) GetIndex() *TxGetterIndex {
	if x, ok := m.GetGetter().(*TxGetter_Index); ok {
		return x.Index
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TxGetter) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TxGetter_OneofMarshaler, _TxGetter_OneofUnmarshaler, _TxGetter_OneofSizer, []interface{}{
		(*TxGetter_Hash)(nil),
		(*TxGetter_Index)(nil),
	}
}

func _TxGetter_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TxGetter)
	// getter
	switch x := m.Getter.(type) {
	case *TxGetter_Hash:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Hash)
	case *TxGetter_Index:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Index); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TxGetter.Getter has unexpected type %T", x)
	}
	return nil
}

func _TxGetter_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TxGetter)
	switch tag {
	case 1: // getter.hash
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Getter = &TxGetter_Hash{x}
		return true, err
	case 2: // getter.index
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TxGetterIndex)
		err := b.DecodeMessage(msg)
		m.Getter = &TxGetter_Index{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TxGetter_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TxGetter)
	// getter
	switch x := m.Getter.(type) {
	case *TxGetter_Hash:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Hash)))
		n += len(x.Hash)
	case *TxGetter_Index:
		s := proto.Size(x.Index)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// TxGetterIndex is message that use
// to get tx by index and block number
type TxGetterIndex struct {
	Index                int64        `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Block                *BlockGetter `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TxGetterIndex) Reset()         { *m = TxGetterIndex{} }
func (m *TxGetterIndex) String() string { return proto.CompactTextString(m) }
func (*TxGetterIndex) ProtoMessage()    {}
func (*TxGetterIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_5ab745470eb2fdc6, []int{2}
}
func (m *TxGetterIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxGetterIndex.Unmarshal(m, b)
}
func (m *TxGetterIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxGetterIndex.Marshal(b, m, deterministic)
}
func (dst *TxGetterIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxGetterIndex.Merge(dst, src)
}
func (m *TxGetterIndex) XXX_Size() int {
	return xxx_messageInfo_TxGetterIndex.Size(m)
}
func (m *TxGetterIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_TxGetterIndex.DiscardUnknown(m)
}

var xxx_messageInfo_TxGetterIndex proto.InternalMessageInfo

func (m *TxGetterIndex) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *TxGetterIndex) GetBlock() *BlockGetter {
	if m != nil {
		return m.Block
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockGetter)(nil), "service.BlockGetter")
	proto.RegisterType((*TxGetter)(nil), "service.TxGetter")
	proto.RegisterType((*TxGetterIndex)(nil), "service.TxGetterIndex")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EthProxyServiceClient is the client API for EthProxyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EthProxyServiceClient interface {
	// Block is Grpc method to fetch Block
	// by given getter params
	Block(ctx context.Context, in *BlockGetter, opts ...grpc.CallOption) (*Block, error)
	// Tx is Grpc method to fetch Tx
	// by given getter params
	Tx(ctx context.Context, in *TxGetter, opts ...grpc.CallOption) (*Tx, error)
}

type ethProxyServiceClient struct {
	cc *grpc.ClientConn
}

func NewEthProxyServiceClient(cc *grpc.ClientConn) EthProxyServiceClient {
	return &ethProxyServiceClient{cc}
}

func (c *ethProxyServiceClient) Block(ctx context.Context, in *BlockGetter, opts ...grpc.CallOption) (*Block, error) {
	out := new(Block)
	err := c.cc.Invoke(ctx, "/service.EthProxyService/Block", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ethProxyServiceClient) Tx(ctx context.Context, in *TxGetter, opts ...grpc.CallOption) (*Tx, error) {
	out := new(Tx)
	err := c.cc.Invoke(ctx, "/service.EthProxyService/Tx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EthProxyServiceServer is the server API for EthProxyService service.
type EthProxyServiceServer interface {
	// Block is Grpc method to fetch Block
	// by given getter params
	Block(context.Context, *BlockGetter) (*Block, error)
	// Tx is Grpc method to fetch Tx
	// by given getter params
	Tx(context.Context, *TxGetter) (*Tx, error)
}

func RegisterEthProxyServiceServer(s *grpc.Server, srv EthProxyServiceServer) {
	s.RegisterService(&_EthProxyService_serviceDesc, srv)
}

func _EthProxyService_Block_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockGetter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EthProxyServiceServer).Block(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.EthProxyService/Block",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EthProxyServiceServer).Block(ctx, req.(*BlockGetter))
	}
	return interceptor(ctx, in, info, handler)
}

func _EthProxyService_Tx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxGetter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EthProxyServiceServer).Tx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.EthProxyService/Tx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EthProxyServiceServer).Tx(ctx, req.(*TxGetter))
	}
	return interceptor(ctx, in, info, handler)
}

var _EthProxyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.EthProxyService",
	HandlerType: (*EthProxyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Block",
			Handler:    _EthProxyService_Block_Handler,
		},
		{
			MethodName: "Tx",
			Handler:    _EthProxyService_Tx_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_5ab745470eb2fdc6) }

var fileDescriptor_service_5ab745470eb2fdc6 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x93, 0x6a, 0xd2, 0x30, 0x6d, 0x10, 0x87, 0x20, 0x21, 0xa7, 0x52, 0x2f, 0x45, 0x24,
	0x87, 0xfa, 0x0d, 0x02, 0x62, 0xc4, 0x8b, 0xc6, 0x9c, 0x7a, 0x6b, 0x9a, 0xc1, 0x14, 0xd3, 0xae,
	0x6c, 0x56, 0x59, 0xbf, 0xbd, 0x64, 0x76, 0x23, 0x11, 0x7b, 0x5a, 0xde, 0xce, 0xef, 0xbd, 0xf9,
	0x03, 0x61, 0x47, 0xf2, 0x6b, 0xbf, 0xa3, 0xf4, 0x43, 0x0a, 0x25, 0x70, 0x6a, 0x65, 0x32, 0x3f,
	0x88, 0x9a, 0xda, 0xce, 0x7c, 0x2f, 0x9f, 0x60, 0x96, 0xb5, 0x62, 0xf7, 0xfe, 0x40, 0x4a, 0x91,
	0xc4, 0x18, 0xfc, 0xe3, 0xe7, 0xa1, 0x22, 0x19, 0xbb, 0x0b, 0x77, 0x75, 0x96, 0x3b, 0x85, 0xd5,
	0x7d, 0xa5, 0xdd, 0x2a, 0xea, 0x54, 0x3c, 0x59, 0xb8, 0xab, 0xa0, 0xaf, 0x18, 0x9d, 0x05, 0xe0,
	0xbf, 0xb1, 0x7b, 0xb9, 0x81, 0xa0, 0xd4, 0x36, 0x29, 0x82, 0xf3, 0x66, 0xdb, 0x35, 0x9c, 0x33,
	0xcf, 0x9d, 0x82, 0x15, 0xa6, 0xe0, 0xed, 0x8f, 0x35, 0x69, 0x0e, 0x99, 0xad, 0xaf, 0xd2, 0x61,
	0xc8, 0xc1, 0xf7, 0xd8, 0x57, 0x73, 0xa7, 0x30, 0xd8, 0x28, 0xfb, 0x05, 0xc2, 0x3f, 0x0c, 0x46,
	0x43, 0x14, 0x4f, 0x6a, 0x0d, 0x78, 0x03, 0x5e, 0xd5, 0xef, 0x63, 0x1b, 0x44, 0xbf, 0x0d, 0x46,
	0x5b, 0x16, 0x06, 0x59, 0xd7, 0x70, 0x71, 0xaf, 0x9a, 0x67, 0x29, 0xf4, 0xf7, 0xab, 0xa1, 0xf0,
	0x16, 0x3c, 0x06, 0xf1, 0xa4, 0x31, 0x09, 0x53, 0x7b, 0x3c, 0x03, 0x5d, 0xc3, 0xa4, 0xd4, 0x78,
	0xf9, 0x6f, 0x89, 0x04, 0x06, 0xae, 0xd4, 0xd9, 0x74, 0xe3, 0xf1, 0xa9, 0x2b, 0x9f, 0x9f, 0xbb,
	0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xef, 0x5d, 0xd6, 0xf4, 0x99, 0x01, 0x00, 0x00,
}
